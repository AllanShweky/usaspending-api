{
  "final_name": "summary_award_recipient_view",
  "refresh": true,
  "matview_sql": [
    "WITH txn_earliest AS (",
    "  SELECT",
    "    DISTINCT ON (award_id)",
    "    id,",
    "    award_id,",
    "    action_date,",
    "    is_fpds",
    "  FROM transaction_normalized",
    "  WHERE",
    "    action_date >= '2007-10-01'",
    "  ORDER BY award_id, action_date",
    ")",
    "SELECT",
    "  txn_earliest.award_id,",
    "  txn_earliest.action_date,",
    "  COALESCE(recipient_lookup.recipient_hash, MD5(",
    "    UPPER(COALESCE(transaction_fpds.awardee_or_recipient_legal, transaction_fabs.awardee_or_recipient_legal)))::uuid",
    "  )::uuid AS recipient_hash,",
    "  COALESCE(transaction_fpds.ultimate_parent_unique_ide, transaction_fabs.ultimate_parent_unique_ide) AS parent_recipient_unique_id",
    "",
    "FROM txn_earliest",
    "LEFT OUTER JOIN transaction_fabs ON (txn_earliest.id = transaction_fabs.transaction_id AND txn_earliest.is_fpds = false)",
    "LEFT OUTER JOIN transaction_fpds ON (txn_earliest.id = transaction_fpds.transaction_id AND txn_earliest.is_fpds = true)",
    "LEFT OUTER JOIN",
    "  (SELECT",
    "    recipient_hash,",
    "    legal_business_name AS recipient_name,",
    "    duns",
    "  FROM recipient_lookup AS rlv",
    "  ) recipient_lookup ON (",
    "    recipient_lookup.duns = COALESCE(transaction_fpds.awardee_or_recipient_uniqu, transaction_fabs.awardee_or_recipient_uniqu) AND",
    "    COALESCE(transaction_fpds.awardee_or_recipient_uniqu, transaction_fabs.awardee_or_recipient_uniqu) IS NOT NULL ",
    "  )"
  ],
  "indexes": [
    {
      "name": "action_date",
      "columns": [{"name": "action_date", "order": "DESC NULLS LAST"}]
    }, {
      "name": "fiscal_year",
      "columns": [{"name": "fiscal_year", "order": "DESC NULLS LAST"}]
    }, {
      "name": "recipient_hash",
      "columns": [{"name": "recipient_hash"}]
    }, {
      "name": "parent_recipient_unique_id",
      "columns": [{"name": "parent_recipient_unique_id"}]
    }
  ]
}
