{
  "final_name": "summary_transaction_recipient_view",
  "refresh": true,
  "matview_sql": [
    "SELECT",
    "  MD5(array_to_string(sort(array_agg(transaction_normalized.id::int)), ' ')) AS pk,",
    "  transaction_normalized.action_date,",
    "  transaction_normalized.fiscal_year,",
    "  transaction_normalized.type,",
    "  transaction_fpds.pulled_from,",
    "",
    "  CASE WHEN transaction_normalized.is_fpds = TRUE THEN",
    "    (SELECT legal_entity_country_code FROM transaction_fpds WHERE transaction_id = transaction_normalized.id)",
    "    ELSE (SELECT legal_entity_country_code FROM transaction_fabs WHERE transaction_id = transaction_normalized.id) END",
    "  AS recipient_location_country_code,",
    "",
    "  CASE WHEN transaction_normalized.is_fpds = TRUE THEN",
    "    (SELECT legal_entity_country_name FROM transaction_fpds WHERE transaction_id = transaction_normalized.id)",
    "    ELSE (SELECT legal_entity_country_name FROM transaction_fabs WHERE transaction_id = transaction_normalized.id) END",
    "  AS recipient_location_country_name,",
    "",
    "  CASE WHEN transaction_normalized.is_fpds = TRUE THEN",
    "    (SELECT legal_entity_state_code FROM transaction_fpds WHERE transaction_id = transaction_normalized.id)",
    "    ELSE (SELECT legal_entity_state_code FROM transaction_fabs WHERE transaction_id = transaction_normalized.id) END",
    "  AS recipient_location_state_code,",
    "",
    "  CASE WHEN transaction_normalized.is_fpds = TRUE THEN",
    "    (SELECT legal_entity_state_name FROM transaction_fpds WHERE transaction_id = transaction_normalized.id)",
    "    ELSE (SELECT legal_entity_state_name FROM transaction_fabs WHERE transaction_id = transaction_normalized.id) END",
    "  AS recipient_location_state_name,",
    "",
    "  CASE WHEN transaction_normalized.is_fpds = TRUE THEN",
    "    (SELECT legal_entity_county_name FROM transaction_fpds WHERE transaction_id = transaction_normalized.id)",
    "    ELSE (SELECT legal_entity_county_name FROM transaction_fabs WHERE transaction_id = transaction_normalized.id) END",
    "  AS recipient_location_county_name,",
    "",
    "  CASE WHEN transaction_normalized.is_fpds = TRUE THEN",
    "    (SELECT legal_entity_zip5 FROM transaction_fpds WHERE transaction_id = transaction_normalized.id)",
    "    ELSE (SELECT legal_entity_zip5 FROM transaction_fabs WHERE transaction_id = transaction_normalized.id) END",
    "  AS recipient_location_zip5,",
    "",
    "  CASE WHEN transaction_normalized.is_fpds = TRUE THEN",
    "    (SELECT legal_entity_congressional FROM transaction_fpds WHERE transaction_id = transaction_normalized.id)",
    "    ELSE (SELECT legal_entity_congressional FROM transaction_fabs WHERE transaction_id = transaction_normalized.id) END",
    "  AS recipient_location_congressional_code,",
    "",
    "  place_of_performance.location_country_code AS pop_country_code,",
    "  place_of_performance.country_name AS pop_country_name,",
    "  place_of_performance.state_code AS pop_state_code,",
    "  place_of_performance.county_code AS pop_county_code,",
    "  place_of_performance.county_name AS pop_county_name,",
    "  place_of_performance.congressional_code AS pop_congressional_code,",
    "  place_of_performance.zip5 AS pop_zip5,",
    "",
    "  UPPER(duns.legal_business_name) AS recipient_name,",
    "  legal_entity.recipient_unique_id,",
    "  legal_entity.parent_recipient_unique_id,",
    "",
    "  SUM(COALESCE(CASE",
    "    WHEN awards.category = 'loans' THEN awards.total_subsidy_cost",
    "    ELSE transaction_normalized.federal_action_obligation",
    "  END, 0)::NUMERIC(23, 2))::NUMERIC(23, 2) AS generated_pragmatic_obligation,",
    "  SUM(COALESCE(transaction_normalized.federal_action_obligation, 0))::NUMERIC(20, 2) AS federal_action_obligation,",
    "  SUM(COALESCE(transaction_normalized.original_loan_subsidy_cost, 0))::NUMERIC(20, 2) AS original_loan_subsidy_cost,",
    "  SUM(COALESCE(transaction_normalized.face_value_loan_guarantee, 0))::NUMERIC(23, 2) AS face_value_loan_guarantee,",
    "  count(*) AS counts",
    "FROM",
    "  transaction_normalized",
    "LEFT OUTER JOIN",
    "  transaction_fabs ON (transaction_normalized.id = transaction_fabs.transaction_id)",
    "LEFT OUTER JOIN",
    "  transaction_fpds ON (transaction_normalized.id = transaction_fpds.transaction_id)",
    "LEFT OUTER JOIN",
    "  references_cfda ON (transaction_fabs.cfda_number = references_cfda.program_number)",
    "LEFT OUTER JOIN",
    "  legal_entity ON (transaction_normalized.recipient_id = legal_entity.legal_entity_id)",
    "LEFT OUTER JOIN",
    "  duns ON (legal_entity.recipient_unique_id = duns.duns)",
    "LEFT OUTER JOIN",
    "  references_location AS place_of_performance ON (transaction_normalized.place_of_performance_id = place_of_performance.location_id)",
    "LEFT OUTER JOIN",
    "  awards ON (transaction_normalized.award_id = awards.id)",
    "WHERE",
    "  transaction_normalized.action_date >= '2007-10-01'",
    "GROUP BY",
    "  transaction_normalized.action_date,",
    "  transaction_normalized.fiscal_year,",
    "  transaction_normalized.type,",
    "  transaction_fpds.pulled_from,",
    "",
    "  CASE WHEN transaction_normalized.is_fpds = TRUE THEN",
    "    (SELECT legal_entity_country_code FROM transaction_fpds WHERE transaction_id = transaction_normalized.id)",
    "    ELSE (SELECT legal_entity_country_code FROM transaction_fabs WHERE transaction_id = transaction_normalized.id) END,",
    "  CASE WHEN transaction_normalized.is_fpds = TRUE THEN",
    "    (SELECT legal_entity_country_name FROM transaction_fpds WHERE transaction_id = transaction_normalized.id)",
    "    ELSE (SELECT legal_entity_country_name FROM transaction_fabs WHERE transaction_id = transaction_normalized.id) END,",
    "  CASE WHEN transaction_normalized.is_fpds = TRUE THEN",
    "    (SELECT legal_entity_state_code FROM transaction_fpds WHERE transaction_id = transaction_normalized.id)",
    "    ELSE (SELECT legal_entity_state_code FROM transaction_fabs WHERE transaction_id = transaction_normalized.id) END,",
    "  CASE WHEN transaction_normalized.is_fpds = TRUE THEN",
    "    (SELECT legal_entity_state_name FROM transaction_fpds WHERE transaction_id = transaction_normalized.id)",
    "    ELSE (SELECT legal_entity_state_name FROM transaction_fabs WHERE transaction_id = transaction_normalized.id) END,",
    "  CASE WHEN transaction_normalized.is_fpds = TRUE THEN",
    "    (SELECT legal_entity_county_name FROM transaction_fpds WHERE transaction_id = transaction_normalized.id)",
    "    ELSE (SELECT legal_entity_county_name FROM transaction_fabs WHERE transaction_id = transaction_normalized.id) END,",
    "  CASE WHEN transaction_normalized.is_fpds = TRUE THEN",
    "    (SELECT legal_entity_zip5 FROM transaction_fpds WHERE transaction_id = transaction_normalized.id)",
    "    ELSE (SELECT legal_entity_zip5 FROM transaction_fabs WHERE transaction_id = transaction_normalized.id) END,",
    "  CASE WHEN transaction_normalized.is_fpds = TRUE THEN",
    "    (SELECT legal_entity_congressional FROM transaction_fpds WHERE transaction_id = transaction_normalized.id)",
    "    ELSE (SELECT legal_entity_congressional FROM transaction_fabs WHERE transaction_id = transaction_normalized.id) END,",
    "",
    "  place_of_performance.location_country_code,",
    "  place_of_performance.country_name,",
    "  place_of_performance.state_code,",
    "  place_of_performance.county_code,",
    "  place_of_performance.county_name,",
    "  place_of_performance.congressional_code,",
    "  place_of_performance.zip5,",
    "",
    "  duns.legal_business_name,",
    "  legal_entity.recipient_unique_id,",
    "  legal_entity.parent_recipient_unique_id"
  ],
  "indexes": [
    {
      "name": "unique_pk",
      "unique": true,
      "columns": [{"name": "pk"}]
    }, {
        "name": "ordered_action_date",
        "columns": [{"name": "action_date", "order": "DESC NULLS LAST"}]
    }, {
        "name": "action_date_and_type",
        "columns": [
          {"name": "action_date", "order": "DESC NULLS LAST"},
          {"name": "type"}
        ]
    }, {
        "name": "type",
        "where": "type IS NOT NULL",
        "columns": [{"name": "type"}]
    }, {
        "name": "pulled_from",
        "where": "pulled_from IS NOT NULL",
        "columns": [{"name": "pulled_from", "order": "DESC NULLS LAST"}]
    }, {
      "name": "recipient_unique_id",
      "where": "recipient_unique_id IS NOT NULL",
      "columns": [{"name": "recipient_unique_id"}]
    }, {
      "name": "parent_recipient_unique_id",
      "where": "parent_recipient_unique_id IS NOT NULL",
      "columns": [{"name": "parent_recipient_unique_id"}]
    }, {
        "name": "recipient_country_code",
        "where": "recipient_location_country_code IS NOT NULL",
        "columns": [{"name": "recipient_location_country_code"}]
    }, {
        "name": "recipient_state_code",
        "where": "recipient_location_state_code IS NOT NULL",
        "columns": [{"name": "recipient_location_state_code"}]
    }, {
        "name": "recipient_county_code",
        "where": "recipient_location_county_code IS NOT NULL",
        "columns": [{"name": "recipient_location_county_code"}]
    }, {
        "name": "recipient_zip",
        "where": "recipient_location_zip5 IS NOT NULL",
        "columns": [{"name": "recipient_location_zip5"}]
    }, {
        "name": "pop_country_code",
        "where": "pop_country_code IS NOT NULL",
        "columns": [{"name": "pop_country_code"}]
    }, {
        "name": "pop_state_code",
        "where": "pop_state_code IS NOT NULL",
        "columns": [{"name": "pop_state_code"}]
    }, {
        "name": "pop_county_code",
        "where": "pop_county_code IS NOT NULL",
        "columns": [{"name": "pop_county_code"}]
    }, {
        "name": "pop_zip",
        "where": "pop_zip5 IS NOT NULL",
        "columns": [{"name": "pop_zip5"}]
    }, {
      "name": "awarding_agency_id",
      "where": "awarding_agency_id IS NOT NULL",
      "columns": [{"name": "awarding_agency_id", "order": "ASC NULLS LAST"}]
    }, {
      "name": "funding_agency_id",
      "where": "funding_agency_id IS NOT NULL",
      "columns": [{"name": "funding_agency_id", "order": "ASC NULLS LAST"}]
    }, {
      "name": "awarding_toptier_agency_name",
      "where": "awarding_toptier_agency_name IS NOT NULL",
      "columns": [{"name": "awarding_toptier_agency_name"}]
    }, {
      "name": "awarding_subtier_agency_name",
      "where": "awarding_subtier_agency_name IS NOT NULL",
      "columns": [{"name": "awarding_subtier_agency_name"}]
    }, {
      "name": "funding_toptier_agency_name",
      "where": "funding_toptier_agency_name IS NOT NULL",
      "columns": [{"name": "funding_toptier_agency_name"}]
    }, {
      "name": "funding_subtier_agency_name",
      "where": "funding_subtier_agency_name IS NOT NULL",
      "columns": [{"name": "funding_subtier_agency_name"}]
    }, {
        "name": "cfda_num",
        "where": "cfda_number IS NOT NULL",
        "columns": [{"name": "cfda_number"}]
    }, {
        "name": "cfda_title",
        "where": "cfda_title IS NOT NULL",
        "columns": [{"name": "cfda_title"}]
    }, {
        "name": "psc",
        "where": "product_or_service_code IS NOT NULL",
        "columns": [{"name": "product_or_service_code"}]
    }, {
        "name": "naics",
        "where": "naics_code IS NOT NULL",
        "columns": [{"name": "naics_code"}]
    }, {
        "name": "total_obl_bin",
        "where": "total_obl_bin IS NOT NULL",
        "columns": [{"name": "total_obl_bin"}]
    }, {
        "name": "type_of_contract",
        "columns": [{"name": "type_of_contract_pricing"}]
    }, {
        "name": "ordered_action_date_and_set_aside",
        "columns": [
          {"name": "type_set_aside"},
          {"name": "action_date", "order": "DESC NULLS LAST"}
        ]
    }, {
        "name": "extent_competed",
        "columns": [{"name": "extent_competed"}]
    }, {
        "name": "type_set_aside",
        "where": "type_set_aside IS NOT NULL",
        "columns": [{"name": "type_set_aside"}]
    }, {
      "name": "business_categories",
      "method": "GIN",
      "columns": [{"name": "business_categories"}]
    }, {
      "name": "simple_pop_geolocation",
      "where": "pop_country_code = 'USA' AND pop_state_code IS NOT NULL",
      "columns": [{"name": "pop_state_code"}, {"name": "action_date"}]
    }, {
      "name": "pop_covering_geolocation",
      "where": "pop_country_code = 'USA'",
      "columns": [{"name": "pop_state_code"}, {"name": "fiscal_year"}, {"name": "generated_pragmatic_obligation"}, {"name": "action_date"}]
    }, {
      "name": "compound_geo_pop_1",
      "where": "pop_country_code = 'USA' AND pop_state_code IS NOT NULL",
      "columns": [{"name": "pop_state_code"}, {"name": "pop_county_code"}, {"name": "action_date"}]
    }, {
      "name": "compound_geo_pop_2",
      "where": "pop_country_code = 'USA' AND pop_state_code IS NOT NULL",
      "columns": [{"name": "pop_state_code"}, {"name": "pop_congressional_code"}, {"name": "action_date"}]
    }, {
      "name": "compound_geo_pop_3",
      "where": "pop_country_code = 'USA' AND pop_zip5 IS NOT NULL",
      "columns": [{"name": "pop_zip5"}, {"name": "action_date"}]
    }, {
      "name": "simple_recipient_location_geolocation",
      "where": "recipient_location_country_code = 'USA' AND recipient_location_state_code IS NOT NULL",
      "columns": [{"name": "recipient_location_state_code"}, {"name": "action_date"}]
    }, {
      "name": "recipient_covering_geolocation",
      "where": "recipient_location_country_code = 'USA'",
      "columns": [{"name": "recipient_location_state_code"}, {"name": "fiscal_year"}, {"name": "generated_pragmatic_obligation"}, {"name": "action_date"}]
    }, {
      "name": "compound_geo_rl_1",
      "where": "recipient_location_country_code = 'USA' AND recipient_location_state_code IS NOT NULL",
      "columns": [{"name": "recipient_location_state_code"}, {"name": "recipient_location_county_code"}, {"name": "action_date"}]
    }, {
      "name": "compound_geo_rl_2",
      "where": "recipient_location_country_code = 'USA' AND recipient_location_state_code IS NOT NULL",
      "columns": [{"name": "recipient_location_state_code"}, {"name": "recipient_location_congressional_code"}, {"name": "action_date"}]
    }, {
      "name": "compound_geo_rl_3",
      "where": "recipient_location_country_code = 'USA' AND recipient_location_zip5 IS NOT NULL",
      "columns": [{"name": "recipient_location_zip5"}, {"name": "action_date"}]
    }
  ]
}
