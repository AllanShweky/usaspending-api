# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-05-03 15:46
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('submissions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppropriationAccountBalances',
            fields=[
                ('data_source', models.CharField(choices=[('USA', 'USAspending'), ('DBR', 'DATA Act Broker')], help_text='The source of this entry, either Data Broker (DBR) or USASpending (USA)', max_length=3, null=True)),
                ('appropriation_account_balances_id', models.AutoField(primary_key=True, serialize=False)),
                ('budget_authority_unobligated_balance_brought_forward_fyb', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('adjustments_to_unobligated_balance_brought_forward_cpe', models.DecimalField(decimal_places=2, max_digits=21)),
                ('budget_authority_appropriated_amount_cpe', models.DecimalField(decimal_places=2, max_digits=21)),
                ('borrowing_authority_amount_total_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('contract_authority_amount_total_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('spending_authority_from_offsetting_collections_amount_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('other_budgetary_resources_amount_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('budget_authority_available_amount_total_cpe', models.DecimalField(decimal_places=2, max_digits=21)),
                ('gross_outlay_amount_by_tas_cpe', models.DecimalField(decimal_places=2, max_digits=21)),
                ('deobligations_recoveries_refunds_by_tas_cpe', models.DecimalField(decimal_places=2, max_digits=21)),
                ('unobligated_balance_cpe', models.DecimalField(decimal_places=2, max_digits=21)),
                ('status_of_budgetary_resources_total_cpe', models.DecimalField(decimal_places=2, max_digits=21)),
                ('obligations_incurred_total_by_tas_cpe', models.DecimalField(decimal_places=2, max_digits=21)),
                ('drv_appropriation_availability_period_start_date', models.DateField(blank=True, null=True)),
                ('drv_appropriation_availability_period_end_date', models.DateField(blank=True, null=True)),
                ('drv_appropriation_account_expired_status', models.TextField(blank=True, null=True)),
                ('drv_obligations_unpaid_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('drv_other_obligated_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('reporting_period_start', models.DateField(blank=True, null=True)),
                ('reporting_period_end', models.DateField(blank=True, null=True)),
                ('last_modified_date', models.DateField(blank=True, null=True)),
                ('certified_date', models.DateField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
                ('final_of_fy', models.BooleanField(db_index=True, default=False)),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='submissions.SubmissionAttributes')),
            ],
            options={
                'managed': True,
                'db_table': 'appropriation_account_balances',
            },
        ),
        migrations.CreateModel(
            name='AppropriationAccountBalancesQuarterly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_source', models.CharField(choices=[('USA', 'USAspending'), ('DBR', 'DATA Act Broker')], help_text='The source of this entry, either Data Broker (DBR) or USASpending (USA)', max_length=3, null=True)),
                ('budget_authority_unobligated_balance_brought_forward_fyb', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('adjustments_to_unobligated_balance_brought_forward_cpe', models.DecimalField(decimal_places=2, max_digits=21)),
                ('budget_authority_appropriated_amount_cpe', models.DecimalField(decimal_places=2, max_digits=21)),
                ('borrowing_authority_amount_total_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('contract_authority_amount_total_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('spending_authority_from_offsetting_collections_amount_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('other_budgetary_resources_amount_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('budget_authority_available_amount_total_cpe', models.DecimalField(decimal_places=2, max_digits=21)),
                ('gross_outlay_amount_by_tas_cpe', models.DecimalField(decimal_places=2, max_digits=21)),
                ('deobligations_recoveries_refunds_by_tas_cpe', models.DecimalField(decimal_places=2, max_digits=21)),
                ('unobligated_balance_cpe', models.DecimalField(decimal_places=2, max_digits=21)),
                ('status_of_budgetary_resources_total_cpe', models.DecimalField(decimal_places=2, max_digits=21)),
                ('obligations_incurred_total_by_tas_cpe', models.DecimalField(decimal_places=2, max_digits=21)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='submissions.SubmissionAttributes')),
            ],
            options={
                'managed': True,
                'db_table': 'appropriation_account_balances_quarterly',
            },
        ),
        migrations.CreateModel(
            name='FederalAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agency_identifier', models.TextField(db_index=True)),
                ('main_account_code', models.TextField(db_index=True)),
                ('account_title', models.TextField()),
            ],
            options={
                'managed': True,
                'db_table': 'federal_account',
            },
        ),
        migrations.CreateModel(
            name='TreasuryAppropriationAccount',
            fields=[
                ('data_source', models.CharField(choices=[('USA', 'USAspending'), ('DBR', 'DATA Act Broker')], help_text='The source of this entry, either Data Broker (DBR) or USASpending (USA)', max_length=3, null=True)),
                ('treasury_account_identifier', models.AutoField(primary_key=True, serialize=False)),
                ('tas_rendering_label', models.TextField(blank=True, null=True)),
                ('allocation_transfer_agency_id', models.TextField(blank=True, null=True)),
                ('agency_id', models.TextField()),
                ('beginning_period_of_availability', models.TextField(blank=True, null=True)),
                ('ending_period_of_availability', models.TextField(blank=True, null=True)),
                ('availability_type_code', models.TextField(blank=True, null=True)),
                ('availability_type_code_description', models.TextField(blank=True, null=True)),
                ('main_account_code', models.TextField()),
                ('sub_account_code', models.TextField()),
                ('account_title', models.TextField(blank=True, null=True)),
                ('reporting_agency_id', models.TextField(blank=True, null=True)),
                ('reporting_agency_name', models.TextField(blank=True, null=True)),
                ('budget_bureau_code', models.TextField(blank=True, null=True)),
                ('budget_bureau_name', models.TextField(blank=True, null=True)),
                ('fr_entity_code', models.TextField(blank=True, null=True)),
                ('fr_entity_description', models.TextField(blank=True, null=True)),
                ('budget_function_code', models.TextField(blank=True, null=True)),
                ('budget_function_title', models.TextField(blank=True, null=True)),
                ('budget_subfunction_code', models.TextField(blank=True, null=True)),
                ('budget_subfunction_title', models.TextField(blank=True, null=True)),
                ('drv_appropriation_availability_period_start_date', models.DateField(blank=True, null=True)),
                ('drv_appropriation_availability_period_end_date', models.DateField(blank=True, null=True)),
                ('drv_appropriation_account_expired_status', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
                ('federal_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.FederalAccount')),
            ],
            options={
                'managed': True,
                'db_table': 'treasury_appropriation_account',
            },
        ),
        migrations.AlterUniqueTogether(
            name='federalaccount',
            unique_together=set([('agency_identifier', 'main_account_code')]),
        ),
        migrations.AddField(
            model_name='appropriationaccountbalancesquarterly',
            name='treasury_account_identifier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.TreasuryAppropriationAccount'),
        ),
        migrations.AddField(
            model_name='appropriationaccountbalances',
            name='treasury_account_identifier',
            field=models.ForeignKey(db_column='treasury_account_identifier', on_delete=django.db.models.deletion.CASCADE, related_name='account_balances', to='accounts.TreasuryAppropriationAccount'),
        ),
    ]
