# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-05-03 15:46
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'agency',
            },
        ),
        migrations.CreateModel(
            name='CFDAProgram',
            fields=[
                ('data_source', models.CharField(choices=[('USA', 'USAspending'), ('DBR', 'DATA Act Broker')], help_text='The source of this entry, either Data Broker (DBR) or USASpending (USA)', max_length=3, null=True)),
                ('program_number', models.TextField(max_length=7, primary_key=True, serialize=False)),
                ('program_title', models.TextField(blank=True, null=True)),
                ('popular_name', models.TextField(blank=True, null=True)),
                ('federal_agency', models.TextField(blank=True, null=True)),
                ('authorization', models.TextField(blank=True, null=True)),
                ('objectives', models.TextField(blank=True, null=True)),
                ('types_of_assistance', models.TextField(blank=True, null=True)),
                ('uses_and_use_restrictions', models.TextField(blank=True, null=True)),
                ('applicant_eligibility', models.TextField(blank=True, null=True)),
                ('beneficiary_eligibility', models.TextField(blank=True, null=True)),
                ('credentials_documentation', models.TextField(blank=True, null=True)),
                ('pre_application_coordination', models.TextField(blank=True, null=True)),
                ('application_procedures', models.TextField(blank=True, null=True)),
                ('award_procedure', models.TextField(blank=True, null=True)),
                ('deadlines', models.TextField(blank=True, null=True)),
                ('range_of_approval_disapproval_time', models.TextField(blank=True, null=True)),
                ('website_address', models.TextField(blank=True, null=True)),
                ('formula_and_matching_requirements', models.TextField(blank=True, null=True)),
                ('length_and_time_phasing_of_assistance', models.TextField(blank=True, null=True)),
                ('reports', models.TextField(blank=True, null=True)),
                ('audits', models.TextField(blank=True, null=True)),
                ('records', models.TextField(blank=True, null=True)),
                ('account_identification', models.TextField(blank=True, null=True)),
                ('obligations', models.TextField(blank=True, null=True)),
                ('range_and_average_of_financial_assistance', models.TextField(blank=True, null=True)),
                ('appeals', models.TextField(blank=True, null=True)),
                ('renewals', models.TextField(blank=True, null=True)),
                ('program_accomplishments', models.TextField(blank=True, null=True)),
                ('regulations_guidelines_and_literature', models.TextField(blank=True, null=True)),
                ('regional_or_local_office', models.TextField(blank=True, null=True)),
                ('headquarters_office', models.TextField(blank=True, null=True)),
                ('related_programs', models.TextField(blank=True, null=True)),
                ('examples_of_funded_projects', models.TextField(blank=True, null=True)),
                ('criteria_for_selecting_proposals', models.TextField(blank=True, null=True)),
                ('url', models.TextField(blank=True, null=True)),
                ('recovery', models.TextField(blank=True, null=True)),
                ('omb_agency_code', models.TextField(blank=True, null=True)),
                ('omb_bureau_code', models.TextField(blank=True, null=True)),
                ('published_date', models.TextField(blank=True, null=True)),
                ('archived_date', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'cfda_program',
            },
        ),
        migrations.CreateModel(
            name='LegalEntity',
            fields=[
                ('data_source', models.CharField(choices=[('USA', 'USAspending'), ('DBR', 'DATA Act Broker')], help_text='The source of this entry, either Data Broker (DBR) or USASpending (USA)', max_length=3, null=True)),
                ('legal_entity_id', models.AutoField(primary_key=True, serialize=False)),
                ('parent_recipient_unique_id', models.TextField(blank=True, null=True, verbose_name='Parent DUNS Number')),
                ('recipient_name', models.TextField(blank=True, verbose_name='Recipient Name')),
                ('vendor_doing_as_business_name', models.TextField(blank=True, null=True)),
                ('vendor_phone_number', models.TextField(blank=True, null=True)),
                ('vendor_fax_number', models.TextField(blank=True, null=True)),
                ('business_types', models.TextField(blank=True, null=True)),
                ('business_types_description', models.TextField(blank=True, null=True)),
                ('recipient_unique_id', models.TextField(blank=True, null=True, verbose_name='DUNS Number')),
                ('limited_liability_corporation', models.TextField(blank=True, null=True)),
                ('sole_proprietorship', models.TextField(blank=True, null=True)),
                ('partnership_or_limited_liability_partnership', models.TextField(blank=True, null=True)),
                ('subchapter_scorporation', models.TextField(blank=True, null=True)),
                ('foundation', models.TextField(blank=True, null=True)),
                ('for_profit_organization', models.TextField(blank=True, null=True)),
                ('nonprofit_organization', models.TextField(blank=True, null=True)),
                ('corporate_entity_tax_exempt', models.TextField(blank=True, null=True)),
                ('corporate_entity_not_tax_exempt', models.TextField(blank=True, null=True)),
                ('other_not_for_profit_organization', models.TextField(blank=True, null=True)),
                ('sam_exception', models.TextField(blank=True, null=True)),
                ('city_local_government', models.TextField(blank=True, null=True)),
                ('county_local_government', models.TextField(blank=True, null=True)),
                ('inter_municipal_local_government', models.TextField(blank=True, null=True)),
                ('local_government_owned', models.TextField(blank=True, null=True)),
                ('municipality_local_government', models.TextField(blank=True, null=True)),
                ('school_district_local_government', models.TextField(blank=True, null=True)),
                ('township_local_government', models.TextField(blank=True, null=True)),
                ('us_state_government', models.TextField(blank=True, null=True)),
                ('us_federal_government', models.TextField(blank=True, null=True)),
                ('federal_agency', models.TextField(blank=True, null=True)),
                ('federally_funded_research_and_development_corp', models.TextField(blank=True, null=True)),
                ('us_tribal_government', models.TextField(blank=True, null=True)),
                ('foreign_government', models.TextField(blank=True, null=True)),
                ('community_developed_corporation_owned_firm', models.TextField(blank=True, null=True)),
                ('labor_surplus_area_firm', models.TextField(blank=True, null=True)),
                ('small_agricultural_cooperative', models.TextField(blank=True, null=True)),
                ('international_organization', models.TextField(blank=True, null=True)),
                ('us_government_entity', models.TextField(blank=True, null=True)),
                ('emerging_small_business', models.TextField(blank=True, null=True)),
                ('c8a_program_participant', models.TextField(blank=True, db_column='8a_program_participant', max_length=1, null=True, verbose_name='8a Program Participant')),
                ('sba_certified_8a_joint_venture', models.TextField(blank=True, null=True)),
                ('dot_certified_disadvantage', models.TextField(blank=True, null=True)),
                ('self_certified_small_disadvantaged_business', models.TextField(blank=True, null=True)),
                ('historically_underutilized_business_zone', models.TextField(blank=True, null=True)),
                ('small_disadvantaged_business', models.TextField(blank=True, null=True)),
                ('the_ability_one_program', models.TextField(blank=True, null=True)),
                ('historically_black_college', models.TextField(blank=True, null=True)),
                ('c1862_land_grant_college', models.TextField(blank=True, db_column='1862_land_grant_college', max_length=1, null=True, verbose_name='1862 Land Grant College')),
                ('c1890_land_grant_college', models.TextField(blank=True, db_column='1890_land_grant_college', max_length=1, null=True, verbose_name='1890 Land Grant College')),
                ('c1994_land_grant_college', models.TextField(blank=True, db_column='1994_land_grant_college', max_length=1, null=True, verbose_name='1894 Land Grant College')),
                ('minority_institution', models.TextField(blank=True, null=True)),
                ('private_university_or_college', models.TextField(blank=True, null=True)),
                ('school_of_forestry', models.TextField(blank=True, null=True)),
                ('state_controlled_institution_of_higher_learning', models.TextField(blank=True, null=True)),
                ('tribal_college', models.TextField(blank=True, null=True)),
                ('veterinary_college', models.TextField(blank=True, null=True)),
                ('educational_institution', models.TextField(blank=True, null=True)),
                ('alaskan_native_servicing_institution', models.TextField(blank=True, null=True, verbose_name='Alaskan Native Owned Servicing Institution')),
                ('community_development_corporation', models.TextField(blank=True, null=True)),
                ('native_hawaiian_servicing_institution', models.TextField(blank=True, null=True)),
                ('domestic_shelter', models.TextField(blank=True, null=True)),
                ('manufacturer_of_goods', models.TextField(blank=True, null=True)),
                ('hospital_flag', models.TextField(blank=True, null=True)),
                ('veterinary_hospital', models.TextField(blank=True, null=True)),
                ('hispanic_servicing_institution', models.TextField(blank=True, null=True)),
                ('woman_owned_business', models.TextField(blank=True, null=True)),
                ('minority_owned_business', models.TextField(blank=True, null=True)),
                ('women_owned_small_business', models.TextField(blank=True, null=True)),
                ('economically_disadvantaged_women_owned_small_business', models.TextField(blank=True, null=True)),
                ('joint_venture_women_owned_small_business', models.TextField(blank=True, null=True)),
                ('joint_venture_economic_disadvantaged_women_owned_small_bus', models.TextField(blank=True, null=True)),
                ('veteran_owned_business', models.TextField(blank=True, null=True)),
                ('service_disabled_veteran_owned_business', models.TextField(blank=True, null=True)),
                ('contracts', models.TextField(blank=True, null=True)),
                ('grants', models.TextField(blank=True, null=True)),
                ('receives_contracts_and_grants', models.TextField(blank=True, null=True)),
                ('airport_authority', models.TextField(blank=True, null=True, verbose_name='Airport Authority')),
                ('council_of_governments', models.TextField(blank=True, null=True)),
                ('housing_authorities_public_tribal', models.TextField(blank=True, null=True)),
                ('interstate_entity', models.TextField(blank=True, null=True)),
                ('planning_commission', models.TextField(blank=True, null=True)),
                ('port_authority', models.TextField(blank=True, null=True)),
                ('transit_authority', models.TextField(blank=True, null=True)),
                ('foreign_owned_and_located', models.TextField(blank=True, null=True)),
                ('american_indian_owned_business', models.TextField(blank=True, null=True, verbose_name='American Indian Owned Business')),
                ('alaskan_native_owned_corporation_or_firm', models.TextField(blank=True, null=True, verbose_name='Alaskan Native Owned Corporation or Firm')),
                ('indian_tribe_federally_recognized', models.TextField(blank=True, null=True)),
                ('native_hawaiian_owned_business', models.TextField(blank=True, null=True)),
                ('tribally_owned_business', models.TextField(blank=True, null=True)),
                ('asian_pacific_american_owned_business', models.TextField(blank=True, null=True, verbose_name='Asian Pacific American Owned business')),
                ('black_american_owned_business', models.TextField(blank=True, null=True)),
                ('hispanic_american_owned_business', models.TextField(blank=True, null=True)),
                ('native_american_owned_business', models.TextField(blank=True, null=True)),
                ('subcontinent_asian_asian_indian_american_owned_business', models.TextField(blank=True, null=True)),
                ('other_minority_owned_business', models.TextField(blank=True, null=True)),
                ('us_local_government', models.TextField(blank=True, null=True)),
                ('undefinitized_action', models.TextField(blank=True, null=True)),
                ('domestic_or_foreign_entity', models.TextField(blank=True, null=True)),
                ('domestic_or_foreign_entity_description', models.TextField(blank=True, null=True)),
                ('division_name', models.TextField(blank=True, null=True)),
                ('division_number', models.TextField(blank=True, null=True)),
                ('last_modified_date', models.DateField(blank=True, null=True)),
                ('certified_date', models.DateField(blank=True, null=True)),
                ('reporting_period_start', models.DateField(blank=True, null=True)),
                ('reporting_period_end', models.DateField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
                ('city_township_government', models.TextField(blank=True, null=True)),
                ('special_district_government', models.TextField(blank=True, null=True)),
                ('small_business', models.TextField(blank=True, null=True)),
                ('small_business_description', models.TextField(blank=True, null=True)),
                ('individual', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'legal_entity',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('data_source', models.CharField(choices=[('USA', 'USAspending'), ('DBR', 'DATA Act Broker')], help_text='The source of this entry, either Data Broker (DBR) or USASpending (USA)', max_length=3, null=True)),
                ('location_id', models.AutoField(primary_key=True, serialize=False)),
                ('country_name', models.TextField(blank=True, null=True, verbose_name='Country Name')),
                ('state_code', models.TextField(blank=True, null=True, verbose_name='State Code')),
                ('state_name', models.TextField(blank=True, null=True, verbose_name='State Name')),
                ('state_description', models.TextField(blank=True, null=True, verbose_name='State Description')),
                ('city_name', models.TextField(blank=True, null=True, verbose_name='City Name')),
                ('city_code', models.TextField(blank=True, null=True)),
                ('county_name', models.TextField(blank=True, null=True)),
                ('county_code', models.TextField(blank=True, null=True)),
                ('address_line1', models.TextField(blank=True, null=True, verbose_name='Address Line 1')),
                ('address_line2', models.TextField(blank=True, null=True, verbose_name='Address Line 2')),
                ('address_line3', models.TextField(blank=True, null=True, verbose_name='Address Line 3')),
                ('foreign_location_description', models.TextField(blank=True, null=True)),
                ('zip4', models.TextField(blank=True, null=True, verbose_name='ZIP+4')),
                ('zip_4a', models.TextField(blank=True, null=True)),
                ('congressional_code', models.TextField(blank=True, null=True, verbose_name='Congressional District Code')),
                ('performance_code', models.TextField(blank=True, null=True, verbose_name='Primary Place Of Performance Location Code')),
                ('zip_last4', models.TextField(blank=True, null=True)),
                ('zip5', models.TextField(blank=True, null=True)),
                ('foreign_postal_code', models.TextField(blank=True, null=True)),
                ('foreign_province', models.TextField(blank=True, null=True)),
                ('foreign_city_name', models.TextField(blank=True, null=True)),
                ('reporting_period_start', models.DateField(blank=True, null=True)),
                ('reporting_period_end', models.DateField(blank=True, null=True)),
                ('last_modified_date', models.DateField(blank=True, null=True)),
                ('certified_date', models.DateField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
                ('place_of_performance_flag', models.BooleanField(default=False, verbose_name='Location used as place of performance')),
                ('recipient_flag', models.BooleanField(default=False, verbose_name='Location used as recipient location')),
            ],
        ),
        migrations.CreateModel(
            name='ObjectClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('major_object_class', models.TextField(db_index=True)),
                ('major_object_class_name', models.TextField()),
                ('object_class', models.TextField(db_index=True)),
                ('object_class_name', models.TextField()),
                ('direct_reimbursable', models.TextField(blank=True, db_index=True, null=True)),
                ('direct_reimbursable_name', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'object_class',
            },
        ),
        migrations.CreateModel(
            name='OfficeAgency',
            fields=[
                ('office_agency_id', models.AutoField(primary_key=True, serialize=False)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
                ('aac_code', models.TextField(blank=True, null=True, verbose_name='Office Code')),
                ('name', models.TextField(blank=True, null=True, verbose_name='Office Name')),
            ],
            options={
                'managed': True,
                'db_table': 'office_agency',
            },
        ),
        migrations.CreateModel(
            name='RefCityCountyCode',
            fields=[
                ('city_county_code_id', models.AutoField(primary_key=True, serialize=False)),
                ('state_code', models.TextField(blank=True, null=True)),
                ('city_name', models.TextField(blank=True, null=True)),
                ('city_code', models.TextField(blank=True, null=True)),
                ('county_code', models.TextField(blank=True, null=True)),
                ('county_name', models.TextField(blank=True, null=True)),
                ('type_of_area', models.TextField(blank=True, null=True)),
                ('valid_begin_date', models.DateTimeField(blank=True, null=True)),
                ('valid_end_date', models.DateTimeField(blank=True, null=True)),
                ('valid_code_indicator', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'ref_city_county_code',
            },
        ),
        migrations.CreateModel(
            name='RefCountryCode',
            fields=[
                ('country_code', models.TextField(primary_key=True, serialize=False)),
                ('country_name', models.TextField(blank=True, null=True)),
                ('valid_begin_date', models.DateTimeField(blank=True, null=True)),
                ('valid_end_date', models.DateTimeField(blank=True, null=True)),
                ('valid_code_indicator', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'ref_country_code',
            },
        ),
        migrations.CreateModel(
            name='RefProgramActivity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('program_activity_code', models.TextField()),
                ('program_activity_name', models.TextField()),
                ('budget_year', models.TextField(blank=True, null=True)),
                ('responsible_agency_id', models.TextField(blank=True, null=True)),
                ('allocation_transfer_agency_id', models.TextField(blank=True, null=True)),
                ('main_account_code', models.TextField(blank=True, null=True)),
                ('valid_begin_date', models.DateTimeField(blank=True, null=True)),
                ('valid_end_date', models.DateTimeField(blank=True, null=True)),
                ('valid_code_indicator', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'ref_program_activity',
            },
        ),
        migrations.CreateModel(
            name='SubtierAgency',
            fields=[
                ('subtier_agency_id', models.AutoField(primary_key=True, serialize=False)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
                ('subtier_code', models.TextField(blank=True, null=True, verbose_name='Sub-Tier Agency Code')),
                ('abbreviation', models.TextField(blank=True, null=True, verbose_name='Agency Abbreviation')),
                ('name', models.TextField(blank=True, null=True, verbose_name='Sub-Tier Agency Name')),
            ],
            options={
                'managed': True,
                'db_table': 'subtier_agency',
            },
        ),
        migrations.CreateModel(
            name='ToptierAgency',
            fields=[
                ('toptier_agency_id', models.AutoField(primary_key=True, serialize=False)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
                ('cgac_code', models.TextField(blank=True, null=True, verbose_name='Top-Tier Agency Code')),
                ('fpds_code', models.TextField(blank=True, null=True)),
                ('abbreviation', models.TextField(blank=True, null=True, verbose_name='Agency Abbreviation')),
                ('name', models.TextField(blank=True, null=True, verbose_name='Top-Tier Agency Name')),
            ],
            options={
                'managed': True,
                'db_table': 'toptier_agency',
            },
        ),
        migrations.CreateModel(
            name='LegalEntityOfficers',
            fields=[
                ('legal_entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='officers', serialize=False, to='references.LegalEntity')),
                ('officer_1_name', models.TextField(blank=True, null=True)),
                ('officer_1_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('officer_2_name', models.TextField(blank=True, null=True)),
                ('officer_2_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('officer_3_name', models.TextField(blank=True, null=True)),
                ('officer_3_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('officer_4_name', models.TextField(blank=True, null=True)),
                ('officer_4_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('officer_5_name', models.TextField(blank=True, null=True)),
                ('officer_5_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('update_date', models.DateField(auto_now_add=True, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.AlterUniqueTogether(
            name='refprogramactivity',
            unique_together=set([('program_activity_code', 'budget_year', 'responsible_agency_id', 'allocation_transfer_agency_id', 'main_account_code')]),
        ),
        migrations.AlterUniqueTogether(
            name='objectclass',
            unique_together=set([('object_class', 'direct_reimbursable')]),
        ),
        migrations.AddField(
            model_name='location',
            name='location_country_code',
            field=models.ForeignKey(blank=True, db_column='location_country_code', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='references.RefCountryCode', verbose_name='Country Code'),
        ),
        migrations.AddField(
            model_name='legalentity',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='references.Location'),
        ),
        migrations.AddField(
            model_name='agency',
            name='office_agency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='references.OfficeAgency'),
        ),
        migrations.AddField(
            model_name='agency',
            name='subtier_agency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='references.SubtierAgency'),
        ),
        migrations.AddField(
            model_name='agency',
            name='toptier_agency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='references.ToptierAgency'),
        ),
        migrations.AlterUniqueTogether(
            name='location',
            unique_together=set([('location_country_code', 'country_name', 'state_code', 'state_name', 'state_description', 'city_name', 'city_code', 'county_name', 'county_code', 'address_line1', 'address_line2', 'address_line3', 'foreign_location_description', 'zip4', 'congressional_code', 'performance_code', 'zip_last4', 'zip5', 'foreign_postal_code', 'foreign_province', 'foreign_city_name', 'reporting_period_start', 'reporting_period_end')]),
        ),
        migrations.AlterUniqueTogether(
            name='agency',
            unique_together=set([('toptier_agency', 'subtier_agency', 'office_agency')]),
        ),
    ]
